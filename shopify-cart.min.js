class ShopifyCart{constructor(e){this.logging={arguments:e.arguments??!1,errors:e.errors??!1,responses:e.responses??!1}}_logArgumentsObject(e){this.logging.arguments&&console.dir(e)}_logErrorsObject(e){this.logging.errors&&console.error(e)}_logResponsesObject(e){this.logging.responses&&console.dir(e)}async addItem(e,t=1,s,o){this._logArgumentsObject({function:"addItem",arguments:{variant_id:e,quantity:t,line_item_properties:s,selling_plan:o}});let n={id:e,quantity:t};s&&(n.line_item_properties=s),o&&(n.selling_plan=o);try{let r=await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({items:[n]})}),a=await r.json();return this._logResponsesObject({function:"addItem",response:a}),a}catch(i){throw this._logErrorsObject(i.message),Error("Could not complete action. Please see logs for details")}}async modifyCartItemByKey(e,t,s,o){this._logArgumentsObject({function:"modifyCartItemByKey",arguments:{line_item_key:e,quantity:t,line_item_properties:s,selling_plan:o}});let n={id:e,quantity:t};n.line_item_properties=s,n.selling_plan=o;try{let r=await fetch("/cart/change.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),a=await r.json();return this._logResponsesObject({function:"modifyCartItemByKey",response:a}),a}catch(i){throw this._logErrorsObject(i.message),Error("Could not complete action. Please see logs for details")}}async modifyCartItemByIndex(e,t,s,o){this._logArgumentsObject({function:"modifyCartItemByIndex",arguments:{index:e,quantity:t,line_item_properties:s,selling_plan:o}});let n={line:e,quantity:t};n.line_item_properties=s,n.selling_plan=o;try{let r=await fetch("/cart/change.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),a=await r.json();return this._logResponsesObject({function:"modifyCartItemByIndex",response:a}),a}catch(i){throw this._logErrorsObject(i.message),Error("Could not complete action. Please see logs for details")}}async modifyCartItemByID(e,t,s,o){this._logArgumentsObject({function:"modifyCartItemByID",arguments:{variant_id:e,quantity:t,line_item_properties:s,selling_plan:o}});let n={id:e,quantity:t};n.line_item_properties=s,n.selling_plan=o;try{let r=await fetch("/cart/change.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),a=await r.json();return this._logResponsesObject({function:"modifyCartItemByID",response:a}),a}catch(i){throw this._logErrorsObject(i.message),Error("Could not complete action. Please see logs for details")}}async getCart(){try{let e=await fetch("/cart.js"),t=await e.json();return this._logResponsesObject({function:"getCart",response:t}),t}catch(s){throw this._logErrorsObject(s.message),Error("Could not complete action. Please see logs for details")}}async updateCart(e,t){this._logArgumentsObject({function:"updateCart",arguments:{note:e,attributes:t}});let s={};void 0!=e&&(s.note=e),t&&(s.attributes=t);try{let o=await fetch("/cart/update.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}),n=await o.json();return this._logResponsesObject({function:"updateCart",response:n}),n}catch(r){throw this._logErrorsObject(r.message),Error("Could not complete action. Please see logs for details")}}async clearCart(){try{let e=await fetch("/cart/clear.js"),t=await e.json();return this._logResponsesObject({function:"clearCart",response:t}),t}catch(s){throw this._logErrorsObject(s.message),Error("Could not complete action. Please see logs for details")}}async generateShippingRates(e,t,s){this._logArgumentsObject({function:"generateShippingRates",arguments:{zip:e,country:t,province:s}});try{let o=await fetch(`/cart/prepare_shipping_rates.json?shipping_address[zip]=${e}&shipping_address[country]=${t}&shipping_address[province]=${s}`,{method:"POST"}),n=await o.json();return this._logResponsesObject({function:"generateShippingRates",response:n}),n}catch(r){throw this._logErrorsObject(r.message),Error("Could not complete action. Please see logs for details")}}async getShippingRates(e,t,s){this._logArgumentsObject({function:"getShippingRates",arguments:{zip:e,country:t,province:s}});try{let o=await fetch(`/cart/async_shipping_rates.json?shipping_address[zip]=${e}&shipping_address[country]=${t}&shipping_address[province]=${s}`),n=await o.json();return this._logResponsesObject({function:"generateShippingRates",response:n}),n}catch(r){throw this._logErrorsObject(r.message),Error("Could not complete action. Please see logs for details")}}}
